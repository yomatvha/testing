{"version":3,"file":"main.js","mappings":"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","sources":["webpack://testing/./src/js/validators.js","webpack://testing/./src/js/widget.js","webpack://testing/./src/js/app.js"],"sourcesContent":["export function isValidCard(value) {\n  if (value.length === 0) {\n    return false;\n  }\n\n  let sum = 0;\n  const nDigits = value.length;\n  const parity = nDigits % 2;\n  let digit;\n  for (let i = 0; i < nDigits; i += 1) {\n    digit = Number(value[i]);\n\n    if (i % 2 === parity) {\n      digit *= 2;\n      if (digit > 9) {\n        digit -= 9;\n      }\n    }\n    sum += digit;\n  }\n  return sum % 10 === 0;\n}\n\nexport function getCardType(value) {\n  if (value[0] === '2') {\n    return 'mir';\n  } if (value[0] === '4') {\n    return 'visa';\n  } if (value[0] === '5') {\n    return 'mastercard';\n  } if (value.substr(0, 2) === '34' || value.substr(0, 2) === '37') {\n    return 'amex';\n  } if (value.substr(0, 2) === '60') {\n    return 'discover';\n  } if (value.substr(0, 2) === '31' || value.substr(0, 2) === '35') {\n    return 'jcb';\n  } if (\n    value.substr(0, 2) === '30'\n    || value.substr(0, 2) === '36'\n    || value.substr(0, 2) === '38'\n  ) {\n    return 'diners';\n  }\n  return 'others';\n}\n","import { isValidCard, getCardType } from './validators';\n\nexport default class CardFormWidget {\n  constructor(parentEl) {\n    this.parentEl = parentEl;\n    this.cards = [\n      'mir',\n      'visa',\n      'mastercard',\n      'amex',\n      'discover',\n      'jcb',\n      'diners',\n    ];\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  static get markup() {\n    return `\n      <div class=\"board\"></div>\n      <form class=\"card-form-widget\">\n        <input type=\"text\" id=\"card-input\" class=\"input\">\n        <button class=\"submit\">Click to Validate</button>\n      </form>\n    `;\n  }\n\n  static get boardSelector() {\n    return '.board';\n  }\n\n  static get submitSelector() {\n    return '.submit';\n  }\n\n  static get inputSelector() {\n    return '.input';\n  }\n\n  static get selector() {\n    return '.card-form-widget';\n  }\n\n  bindToDOM() {\n    this.parentEl.innerHTML = CardFormWidget.markup;\n\n    this.boardEl = this.parentEl.querySelector(CardFormWidget.boardSelector);\n\n    for (let i = 0; i < this.cards.length; i += 1) {\n      const cellEl = document.createElement('div');\n      cellEl.classList.add('cell');\n      this.boardEl.appendChild(cellEl);\n    }\n\n    this.element = this.parentEl.querySelector(CardFormWidget.selector);\n    this.submit = this.element.querySelector(CardFormWidget.submitSelector);\n    this.input = this.element.querySelector(CardFormWidget.inputSelector);\n\n    this.redrawPositions();\n\n    this.element.addEventListener('submit', this.onSubmit);\n  }\n\n  redrawPositions() {\n    const cardType = getCardType(this.input.value);\n    const isValid = isValidCard(this.input.value);\n\n    for (let i = 0; i < this.cards.length; i += 1) {\n      this.boardEl.children[i].innerHTML = '';\n      const cellEl = this.boardEl.children[i];\n      const charEl = document.createElement('div');\n      if (this.cards[i] === cardType && isValid === true) {\n        charEl.classList.add('card', this.cards[i]);\n      } else {\n        charEl.classList.add('card', `${this.cards[i]}-no`);\n      }\n      cellEl.appendChild(charEl);\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const { value } = this.input;\n\n    if (isValidCard(value)) {\n      this.input.classList.add('valid');\n      this.input.classList.remove('invalid');\n    } else {\n      this.input.classList.add('invalid');\n      this.input.classList.remove('valid');\n    }\n\n    this.redrawPositions();\n  }\n}\n","import CardFormWidget from './widget';\n\nconst container = document.querySelector('.container');\nconst form = new CardFormWidget(container);\n\nform.bindToDOM();\n"],"names":["isValidCard","value","length","sum","nDigits","parity","digit","i","Number","CardFormWidget","constructor","parentEl","this","cards","onSubmit","bind","markup","boardSelector","submitSelector","inputSelector","selector","bindToDOM","innerHTML","boardEl","querySelector","cellEl","document","createElement","classList","add","appendChild","element","submit","input","redrawPositions","addEventListener","cardType","substr","isValid","children","charEl","e","preventDefault","remove","container"],"sourceRoot":""}